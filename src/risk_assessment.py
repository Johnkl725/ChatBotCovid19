
# risk_assessment.py

from config import MESSAGES

def evaluate_risk(user_data):
    age = user_data.get("age", 0)
    symptoms = user_data.get("symptoms", [])
    comorbidities = user_data.get("comorbidities", [])
    exposure = user_data.get("exposure", False)

    # Convertir s√≠ntomas y comorbilidades a un formato m√°s f√°cil de manejar
    has_fever = "Fiebre >38¬∞C (üî•)" in symptoms
    has_cough = "Tos seca persistente (ü§ß)" in symptoms
    has_respiratory_difficulty = "Dificultad respiratoria (üòÆüí®)" in symptoms
    has_chest_pain = "Dolor/presi√≥n tor√°cica (üí¢)" in symptoms
    has_loss_of_smell_taste = "P√©rdida olfato/gusto (üëÉ‚ùå)" in symptoms
    has_extreme_fatigue = "Fatiga extrema (üò©)" in symptoms

    num_comorbidities = len(comorbidities)

    # Reglas de riesgo CR√çTICO
    if (has_respiratory_difficulty and has_chest_pain) or \
       (age > 65 and has_fever and num_comorbidities >= 2):
        return "CR√çTICO", MESSAGES["critical_risk"]

    # Reglas de riesgo MODERADO
    if (has_fever and has_cough and exposure) or \
       (40 <= age <= 64 and (has_fever or has_cough or has_respiratory_difficulty or has_chest_pain or has_loss_of_smell_taste or has_extreme_fatigue)):
        return "MODERADO", MESSAGES["moderate_risk"]

    # Reglas de riesgo BAJO
    if (not symptoms and not exposure) or \
       (len(symptoms) <= 1 and num_comorbidities == 0):
        return "BAJO", MESSAGES["low_risk"]

    # Si no encaja en ninguna categor√≠a anterior, por defecto se considera moderado para precauci√≥n
    return "MODERADO", MESSAGES["moderate_risk"]


